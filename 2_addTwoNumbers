/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(-1);
        ListNode cur = dummy;
        int carry = 0;
        while(l1 != null || l2 != null)
        {
            int sum = 0;
            if(l1 != null)
            {
                sum += l1.val;
                l1 = l1.next; 
            }
            if(l2 != null)
            {
                sum += l2.val;
                l2 = l2.next; 
            }
            sum += carry;
            cur.next = new ListNode(sum%10);
            carry = sum / 10;
            cur = cur.next;
        }
        if(carry > 0)
        {
            cur.next = new ListNode(carry);
        }
        return dummy.next;
    }
}

/**
先设置一个dummy，用来放置最终的值。
然后将不为null的l1，l2相加，并加上进位的carry，从而得到sum的值，放入listnode中。
如果最后carry的值大于零，就需要增加一个listnode，放入一个最高位的值。
*/
