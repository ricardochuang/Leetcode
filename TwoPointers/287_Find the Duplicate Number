class Solution {
    public int findDuplicate(int[] nums) {
        int i = 0;
        int j = 0;
        int res = 0;
        for(i = 0; i < nums.length; ++i)
        {
            for(j = i + 1; j < nums.length; ++j)
            {
                if(nums[i] == nums[j]) res = nums[i];
            }

        }
        return res;
    }
}

//纯暴力解法，会失去offer的那种


class Solution {
    public int findDuplicate(int[] nums) {
        Set<Integer> set = new HashSet<>();
        for(int i : nums)
        {
            if(set.contains(i)) return i;
            set.add(i);
        }
        return -1;
    }
}

/**
第一次理解什么是hashset。这个东西会自动排序和去重。
/*


class Solution {
    public int findDuplicate(int[] nums) {
        int slow = nums[0];
        int fast = nums[nums[0]];
        //得到相遇位置
        while(slow != fast)
        {
            slow = nums[slow];
            fast = nums[nums[fast]];
        }

        //将一个置零，另一个留在相遇位置
        slow = 0;
        while(slow != fast)
        {
            slow = nums[slow];
            fast = nums[fast];
        }
        return slow;
    }
}

//快慢指针。详见b站。
